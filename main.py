from fastapi import FastAPI
from pydantic import BaseModel
import subprocess
import json

app = FastAPI()

class SearchRequest(BaseModel):
    keyword: str
    region: str

@app.post("/api/yandex-competitors")
def get_competitors(data: SearchRequest):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
        region = data.region
        keyword = data.keyword
        print(f"üì¶ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: region={region}, keyword={keyword}")


        # –ó–∞–ø—É—Å–∫ –≤–Ω–µ—à–Ω–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
        result = subprocess.run(
            ["python", "yandex_parser.py", region, keyword],
            capture_output=True,
            text=True,
            timeout=60
        )

        # üîç –û—Ç–ª–∞–¥–∫–∞ (–º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —É–±—Ä–∞—Ç—å)
        print("üü¢ STDOUT:")
        print(result.stdout)
        print("üî¥ STDERR:")
        print(result.stderr)

        # –ü–æ–ø—ã—Ç–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JSON
        try:
            parsed = json.loads(result.stdout)
            return {"results": parsed} if isinstance(parsed, list) else parsed
        except json.JSONDecodeError:
            return {
    "error": "‚ùå –°–∫—Ä–∏–ø—Ç –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON",
    "stdout": result.stdout,
    "stderr": result.stderr
}

    except Exception as e:
        return {"error": f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–Ω–µ—à–Ω–µ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞: {str(e)}"}
