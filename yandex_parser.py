import sys
import json
import random
import time
import requests
from playwright.sync_api import sync_playwright

# –î–∞–Ω–Ω—ã–µ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
region = sys.argv[1]
keyword = sys.argv[2]
print(f"üì¶ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: region={region}, keyword={keyword}")

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã CapMonster
CAPMONSTER_API_KEY = "d495ca5c5f7003dee37df6a1789b6716"
CAPTCHA_SITEKEY = ""
CAPTCHA_URL = "https://yandex.ru/search/"

# –ü—Ä–æ–∫—Å–∏ –æ—Ç Froxy (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –ª–æ–≥–∏–Ω—É/–ø–∞—Ä–æ–ª—é)
PROXY_LOGIN = "yQqnOlDHz02LAm20"
PROXY_PASSWORD = "mobile;;;;"
PROXY_HOST = "proxy.froxy.com"
PROXY_PORTS = list(range(9000, 9200))

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –∏–∑ SERP
def parse_results(page):
    page.wait_for_selector("li.serp-item", timeout=10000)
    items = page.query_selector_all("li.serp-item")
    results = []
    for item in items[:3]:
        link = item.query_selector("a.Link")
        href = link.get_attribute("href") if link else None
        if href:
            results.append(href)
    return results

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–∞–ø—á–∏
def is_captcha(page):
    return page.query_selector(".CheckboxCaptcha-Anchor") or page.query_selector("#captcha")

# –†–µ—à–µ–Ω–∏–µ –∫–∞–ø—á–∏ —á–µ—Ä–µ–∑ CapMonster
def solve_captcha():
    print("\ud83d\udce4 –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–ø—á—É –Ω–∞ CapMonster...")
    return {
        "errorId": 1,
        "errorCode": "ERROR_ZERO_CAPTCHA_FILESIZE",
        "errorDescription": "–°–∏–º—É–ª—è—Ü–∏—è - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ"
    }

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–∫—Å–∏
with sync_playwright() as p:
    for port in PROXY_PORTS:
        proxy = f"http://{PROXY_LOGIN}:{PROXY_PASSWORD}@{PROXY_HOST}:{port}"
        print(f"üåê –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–∫—Å–∏: {proxy}")
        try:
            browser = p.chromium.launch(
                headless=True,
                proxy={"server": f"http://{PROXY_HOST}:{port}", "username": PROXY_LOGIN, "password": PROXY_PASSWORD}
            )
            page = browser.new_page()

            url = f"https://yandex.ru/search/?text={keyword}%20–≤%20{region}"
            page.goto(url, timeout=15000)

            if is_captcha(page):
                print("üîê –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞! –ü—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å —á–µ—Ä–µ–∑ CapMonster...")
                solution = solve_captcha()
                print(f"üì• –û—Ç–≤–µ—Ç –æ—Ç CapMonster: {solution}")
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞: üöë –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∫–∞–ø—á—É —á–µ—Ä–µ–∑ CapMonster.")
                browser.close()
                continue

            results = parse_results(page)
            browser.close()
            print(json.dumps(results, ensure_ascii=False))
            sys.exit(0)

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
            continue

print(json.dumps({"error": "üöë –í—Å–µ –ø—Ä–æ–∫—Å–∏ –¥–∞–ª–∏ —Å–±–æ–π –∏–ª–∏ –Ø–Ω–¥–µ–∫—Å –≤—ã–¥–∞–ª –∫–∞–ø—á—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ –∏–ª–∏ –¥–æ–±–∞–≤—å –ø—Ä–æ–∫—Å–∏."}, ensure_ascii=False))
